{"version":3,"sources":["app/expensesSlice.js","services/expenses.js","components/ExpenseForm.js","components/ExpenseList.js","components/HomePage.js","app/authenticationSlice.js","components/Navbar.js","services/authentication.js","components/ThirdPartySignIns.js","components/SignInPage.js","components/SignUpPage.js","app/statisticsSlice.js","services/statistics.js","components/StatisticsPage.js","App.js","middlewares/ToastMiddleware.js","app/store.js","serviceWorker.js","index.js"],"names":["setExpensesError","createAction","newExpenseError","editExpenseError","deleteExpenseError","expensesSlice","createSlice","name","initialState","expenses","reducers","setExpenses","state","action","payload","newExpense","editExpense","map","expense","id","deleteExpense","filter","actions","axiosInstance","axios","baseURL","process","interceptors","request","use","config","headers","authorization","sessionStorage","getItem","GetExpenses","dispatch","a","get","data","NewExpense","post","EditExpense","put","DeleteExpense","delete","ExpenseForm","setIsEditing","descriptions","useState","amount","setAmount","description","setDescription","isNewExpense","setIsNewExpense","useDispatch","useEffect","undefined","Form","onSubmit","event","preventDefault","Number","Row","Col","Label","Control","as","onChange","target","value","d","idx","type","step","placeholder","style","marginTop","Button","variant","marginRight","onClick","ListRow","isEditing","ExpenseList","useSelector","e","marginBottom","HomePage","width","margin","border","authenticationSlice","token","isLoggedIn","userAuthenticated","setItem","logout","clear","Navbar","Nav","className","backgroundColor","fontFamily","display","alignItems","marginLeft","to","href","SignUp","credentials","console","log","SignIn","ThirdPartySignIn","ThirdPartySignIns","textAlign","clientId","onSuccess","r","tokenId","onFailure","SignInPage","username","setUsername","password","setPassword","paddingTop","InputGroup","FormControl","SignUpPage","email","setEmail","confirmPassword","setConfirmPassword","disabled","length","statisticsSlice","expenseAmountPerCategory","setExpenseAmountPerCategory","getExpensesPerCategory","StatisticsPage","labels","doughnut","setDoughnut","x","Key","Value","datasets","hidden","maxWidth","maxHeight","App","exact","path","render","component","ToastMiddleware","next","toast","success","error","configureStore","reducer","middleware","getDefaultMiddleware","concat","Boolean","window","location","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.972df76e.chunk.js","sourcesContent":["import { createSlice, createAction } from '@reduxjs/toolkit';\n\nexport const setExpensesError = createAction('setExpensesError');\nexport const newExpenseError = createAction('newExpenseError');\nexport const editExpenseError = createAction('editExpenseError');\nexport const deleteExpenseError = createAction('deleteExpenseError');\n\nexport const expensesSlice = createSlice({\n    name: 'expenses',\n    initialState: {\n        expenses: [],\n    },\n    reducers: {\n        setExpenses: (state, action) => {\n            return { ...state, expenses: [...action.payload] };\n        },\n        newExpense: (state, action) => {\n            return { ...state, expenses: [action.payload, ...state.expenses] }\n        },\n        editExpense: (state, action) => {\n            const expenses = state.expenses.map(expense => {\n                if (expense.id === action.payload.id) {\n                    expense = action.payload;\n                }\n                return expense;\n            });\n            return { ...state, expenses: [...expenses] };\n        },\n        deleteExpense: (state, action) => {\n            const expenses = state.expenses.filter(expense =>\n                expense.id !== action.payload.id);\n            return { ...state, expenses: [...expenses] };\n        }\n    }\n});\n\nexport const { setExpenses, newExpense, editExpense, deleteExpense } = expensesSlice.actions;\n\nexport default expensesSlice.reducer;","import {\n    setExpenses, newExpense, editExpense, deleteExpense,\n    setExpensesError, editExpenseError, newExpenseError, deleteExpenseError\n} from '../app/expensesSlice';\nimport * as axios from 'axios';\n\nconst axiosInstance = axios.create({    \n    baseURL: `${process.env.REACT_APP_BASE_URL}/expenses`,\n})\n\naxiosInstance.interceptors.request.use((config) => {\n    config.headers = { authorization: 'Bearer ' + sessionStorage.getItem('token') };\n    return config;\n});\n\nexport const GetExpenses = async (dispatch) => {\n    try {\n        // api call\n        const { data } = await axiosInstance.get();\n        dispatch(setExpenses(data));\n    } catch {\n        dispatch(setExpensesError());\n    }\n}\n\nexport const NewExpense = async (dispatch, expense) => {\n    try {\n        // api call\n        const { data } = await axiosInstance.post('', expense);\n        dispatch(newExpense(data));\n    } catch {\n        dispatch(newExpenseError());\n    }\n}\n\nexport const EditExpense = async (dispatch, expense) => {\n    try {\n        // api call\n        await axiosInstance.put('', expense);\n        dispatch(editExpense(expense));\n    } catch {\n        dispatch(editExpenseError());\n    }\n}\n\nexport const DeleteExpense = async (dispatch, expense) => {\n    try {\n        // api call\n        await axiosInstance.delete('', { data: { ...expense } });\n        dispatch(deleteExpense(expense));\n    } catch {\n        dispatch(deleteExpenseError());\n    }\n}","import { React, useState, useEffect } from 'react';\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { EditExpense, NewExpense, DeleteExpense } from '../services/expenses';\nimport { useDispatch } from 'react-redux';\n\nconst ExpenseForm = ({ expense, setIsEditing }) => {\n    const descriptions = ['Groceries', 'Credit Card', 'Student Loans', 'Eating out', 'Gas'];\n    const [amount, setAmount] = useState(0);\n    const [description, setDescription] = useState(descriptions[0]);\n    const [isNewExpense, setIsNewExpense] = useState(true);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(expense !== undefined) {\n            setIsNewExpense(false);\n            setAmount(expense.amount);\n        }\n        else {\n            setIsNewExpense(true);\n        }\n    }, [expense]);\n\n    return <Form\n        onSubmit={event => {\n            event.preventDefault();\n            if(isNewExpense) {\n                NewExpense(dispatch, {description: description, amount: Number(amount)});\n            }\n            else {\n                EditExpense(dispatch, {id: expense.id, description: description, amount: Number(amount)});\n                setIsEditing(false);\n            }\n        }}\n    >\n        <Row>\n            <Col>\n                <Form.Label>Description</Form.Label>\n                <Form.Control as='select'\n                    onChange={event => setDescription(event.target.value)}>\n                    {descriptions.map((d, idx) => <option key={idx}>{d}</option>)}\n                </Form.Control>\n            </Col>\n            <Col>\n                <Form.Label>Amount</Form.Label>\n                <Form.Control type='number' step='0.01'\n                    placeholder={amount}\n                    onChange={event => setAmount(event.target.value)} />\n            </Col>\n            <div style={{ marginTop: 'auto' }}>\n                {isNewExpense\n                    ? <Button variant='primary' type='submit'>Add</Button>\n                    : <div>\n                        <Button style={{ marginRight: '2px'}} variant='danger'\n                        onClick={() => DeleteExpense(dispatch, expense)}>Delete</Button>\n                        <Button style={{ marginRight: '2px'}} variant='success' type='submit'>Save</Button>\n                        <Button style={{ marginRight: '2px'}} variant='default' onClick={() => setIsEditing(false)}>Cancel</Button>\n                    </div>}\n            </div>\n        </Row>\n    </Form>\n}\n\nexport default ExpenseForm;","import { React, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetExpenses } from '../services/expenses';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport ExpenseForm from './ExpenseForm';\n\nconst ExpenseList = () => {\n    const dispatch = useDispatch();\n    const expenses = useSelector(state => state.expensesSlice.expenses);\n\n    useEffect(() => {\n        GetExpenses(dispatch);\n    }, []);\n\n    return expenses.map(e =>\n        <div key={e.id} style={{ marginBottom: '1rem' }}>\n            <ListRow expense={e} />\n        </div>\n    );\n}\n\nconst ListRow = ({ expense }) => {\n    const [isEditing, setIsEditing] = useState(false);\n\n    return isEditing\n        ? <ExpenseForm expense={expense} setIsEditing={setIsEditing} />\n        : <div>\n            <Row>\n                <Col>{expense.description}</Col>\n                <Col>${expense.amount}</Col>\n                <Button variant=\"warning\" onClick={() => setIsEditing(!isEditing)}>Edit</Button>\n            </Row>\n            <hr />\n        </div>\n}\n\nexport default ExpenseList;","import ExpenseList from './ExpenseList';\nimport ExpenseForm from './ExpenseForm';\nimport { ToastContainer } from 'react-toastify';\n\nconst HomePage = () => (\n    <div style={{ width: '60%', margin: 'auto' }}>\n        <ToastContainer />\n        <h4>New Expense</h4>\n        <ExpenseForm />\n        <hr style={{ border: '1px solid grey' }} />\n        <h4>Your Expenses</h4>\n        <ExpenseList />\n    </div>\n);\n\nexport default HomePage;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const authenticationSlice = createSlice({\n    name: 'authentication',\n    initialState: {\n        token: '',\n        isLoggedIn: false,\n    },\n    reducers: {\n        userAuthenticated: (state, action) => {\n            sessionStorage.setItem('token', action.payload.token);\n            return {\n                ...state, ...{\n                    token: action.payload.token,\n                    isLoggedIn: true,\n                }\n            }\n        },\n        logout: () => {\n            sessionStorage.clear();\n        }\n    }\n});\n\nexport const { userAuthenticated, logout } = authenticationSlice.actions;\n\nexport default authenticationSlice.reducer;","import { Nav, Button } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout } from '../app/authenticationSlice';\n\nconst Navbar = () => {\n    const { isLoggedIn } = useSelector(state => state.authenticationSlice);\n    const dispatch = useDispatch();\n\n    return <Nav className='navbar' style={{ backgroundColor: '#e4fff2' }}>\n        <h1 style={{ fontFamily: 'Brush Script MT, cursive' }}>My Expenses</h1>\n        {isLoggedIn\n            ?\n            <div style={{display:'flex', alignItems:'center'}}>\n                <NavLink style={{ marginLeft: '1rem' }} variant='link' to='/'>Home</NavLink>\n                <NavLink style={{ marginLeft: '1rem' }} variant='link' to='/statistics'>Statistics</NavLink>\n                <Button variant='link' href='/signin' onClick={() => { dispatch(logout()) }}>Log out</Button>\n            </div>\n            : <div style={{ display: 'flex' }}>\n                <NavLink to=\"/signup\">Sign up</NavLink>\n                <NavLink to=\"/signin\" style={{ marginLeft: '1rem' }}>Sign in</NavLink>\n            </div>}\n    </Nav >\n};\n\nexport default Navbar;","import { userAuthenticated } from '../app/authenticationSlice';\nimport * as axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: `${process.env.REACT_APP_BASE_URL}/Authentication`,\n});\n\nexport const SignUp = async (dispatch, credentials) => {\n    try {\n        // api call\n        const { data } = await axiosInstance.post('/signup', credentials);\n        dispatch(userAuthenticated(data));\n    } catch {\n        console.log('Error!');\n    }\n}\n\nexport const SignIn = async (dispatch, credentials) => {\n    try {\n        // api call\n        const { data } = await axiosInstance.post('/signin', credentials);\n        dispatch(userAuthenticated(data));\n    } catch {\n        console.log('Error!');\n    }\n}\n\nexport const ThirdPartySignIn = async (dispatch, token) => {\n    try {\n        // api call        \n        const { data } = await axiosInstance.post(`/google?token=${token}`);\n        dispatch(userAuthenticated(data));\n    } catch {\n        console.log('Error!')\n    }\n}","import { ThirdPartySignIn } from '../services/authentication';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\n\nconst ThirdPartySignIns = () => {\n    const dispatch = useDispatch();\n\n    return <div style={{ textAlign: 'center', marginTop: '1rem' }}>\n        <GoogleLogin\n            clientId={process.env.REACT_APP_CLIENT_ID}\n            onSuccess={r => ThirdPartySignIn(dispatch, r.tokenId)}\n            onFailure={e => console.log('Error! ', e)}\n        />\n    </div>\n}\n\nexport default ThirdPartySignIns;","import { React, useState } from 'react';\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { SignIn } from '../services/authentication';\nimport { useDispatch } from 'react-redux';\nimport ThirdPartySignIns from './ThirdPartySignIns';\n\nconst SignInPage = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n\n    return <div style={{ width: '30rem', margin: 'auto', paddingTop: '8px' }}>\n        <Form\n            onSubmit={event => {\n                event.preventDefault();\n                SignIn(dispatch, { username, password });\n            }}>\n            <h4 style={{ textAlign: 'center' }}>Welcome back</h4>\n            <InputGroup className='mb-3'>\n                <FormControl placeholder='Username'\n                    onChange={event => setUsername(event.target.value)} />\n            </InputGroup>\n            <InputGroup className='mb-3'>\n                <FormControl placeholder='Password' type='password'\n                    onChange={event => setPassword(event.target.value)} />\n            </InputGroup>\n            <Button type='submit' variant='primary' style={{ margin: 'auto', display: 'block', width: '10rem' }}>Sign In</Button>\n        </Form>\n        <ThirdPartySignIns />\n    </div>\n};\n\nexport default SignInPage;","import { React, useState } from 'react';\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { SignUp } from '../services/authentication';\nimport { useDispatch } from 'react-redux';\nimport ThirdPartySignIns from './ThirdPartySignIns';\n\nconst SignUpPage = () => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const dispatch = useDispatch();\n\n    return <div style={{ width: '30rem', margin: 'auto', paddingTop: '8px' }}>\n        <Form\n            onSubmit={event => {\n                event.preventDefault();\n                if (password === confirmPassword) {\n                    SignUp(dispatch, { username, email, password });\n                }\n            }}>\n            <h4 style={{ textAlign: 'center' }}>Create an account</h4>\n            <InputGroup className='mb-3'>\n                <FormControl placeholder='Username'\n                    onChange={event => setUsername(event.target.value)} />\n            </InputGroup>\n            <InputGroup className='mb-3'>\n                <FormControl placeholder='Email'\n                    onChange={event => setEmail(event.target.value)} />\n            </InputGroup>\n            <InputGroup className='mb-3'>\n                <FormControl placeholder='Password' type='password'\n                    onChange={event => setPassword(event.target.value)} />\n            </InputGroup>\n            <InputGroup className='mb-3'>\n                <FormControl placeholder='Confirm Password' type='password'\n                    onChange={event => setConfirmPassword(event.target.value)} />\n            </InputGroup>\n            <Button type='submit' variant='success'\n                style={{ margin: 'auto', display: 'block', width: '10rem' }}\n                disabled={password !== confirmPassword || password.length <= 0}>Sign Up</Button>\n        </Form>\n        <ThirdPartySignIns />\n    </div>\n};\n\nexport default SignUpPage;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const statisticsSlice = createSlice({\n    name: 'statistics',\n    initialState: {\n        expenseAmountPerCategory: [],\n    },\n    reducers: {\n        setExpenseAmountPerCategory: (state, action) => {\n            return { ...state, expenseAmountPerCategory: [...action.payload] };\n        },\n    }\n});\n\nexport const { setExpenseAmountPerCategory } = statisticsSlice.actions;\n\nexport default statisticsSlice.reducer;","import * as axios from 'axios';\nimport { setExpenseAmountPerCategory } from '../app/statisticsSlice';\n\nconst axiosInstance = axios.create({\n    baseURL: `${process.env.REACT_APP_BASE_URL}/statistics`,\n});\n\naxiosInstance.interceptors.request.use((config) => {\n    config.headers = { authorization: 'Bearer ' + sessionStorage.getItem('token') };\n    return config;\n});\n\nexport const getExpensesPerCategory = async (dispatch) => {\n    try {\n        const { data } = await axiosInstance.get();\n        dispatch(setExpenseAmountPerCategory(data));\n    } catch (error) {\n        console.log(error);\n    }\n}","import { Doughnut } from 'react-chartjs-2';\nimport { getExpensesPerCategory } from '../services/statistics';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst StatisticsPage = () => {\n    const dispatch = useDispatch();\n    const expenseAmountPerCategory = useSelector(state =>\n        state.statisticsSlice.expenseAmountPerCategory);\n    const [doughnut, setDoughnut] = useState({\n        labels: [],\n        data: [],\n    });\n\n    useEffect(() => {\n        getExpensesPerCategory(dispatch);\n    }, []);\n\n    useEffect(() => {\n        setDoughnut({\n            labels: expenseAmountPerCategory.map(x => x.Key),\n            data: expenseAmountPerCategory.map(x => x.Value),\n        });\n    }, [expenseAmountPerCategory]);\n\n    const data = {\n        labels: doughnut.labels,\n        datasets: [{\n            data: doughnut.data,\n            backgroundColor: [\n                '#007bff', // blue\n                '#FF0000', // red\n                '#FFD700', // yellow\n                '#28a745', // green\n                '#FF00FF', // violet\n                '#ff9900', // orange\n                '#00FFFF', // aqua marine\n                '#d69ae5', // red violet\n                '#FF8F66', // orange red\n                '#00FF00', // lime\n            ],\n        }],\n    };\n\n    return <div hidden={!expenseAmountPerCategory || !expenseAmountPerCategory.length}\n        style={{ maxWidth: '35rem', maxHeight: '35rem', margin: 'auto', textAlign: 'center' }}>\n        <h4 style={{ marginTop: '10px' }}>Expenses per Category</h4>\n        <Doughnut data={data} />\n    </div>\n}\n\nexport default StatisticsPage;","import { React, useEffect } from 'react';\nimport HomePage from './components/HomePage';\nimport Navbar from './components/Navbar';\nimport SignInPage from './components/SignInPage';\nimport SignUpPage from './components/SignUpPage';\nimport StatisticsPage from './components/StatisticsPage';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userAuthenticated } from './app/authenticationSlice';\n\nconst App = () => {\n  const { isLoggedIn } = useSelector(state => state.authenticationSlice);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const token = sessionStorage.getItem('token');\n    if (token !== undefined && token !== null) {\n      dispatch(userAuthenticated({ token: token }))\n    }\n  }, []);\n\n  return <BrowserRouter>\n    <Navbar />\n    <Switch>\n      <Route exact path=\"/\" render={() => (isLoggedIn ? <HomePage /> : <SignInPage />)} />\n      <Route path=\"/signup\" render={() => (isLoggedIn ? <Redirect to='/' /> : <SignUpPage />)} />\n      <Route path=\"/signin\" render={() => (isLoggedIn ? <Redirect to='/' /> : <SignInPage />)} />\n      <Route path=\"/statistics\" render={() => (isLoggedIn ? <StatisticsPage /> : <SignInPage />)} />\n      <Route component={() => <h2>Page not found!</h2>} />\n    </Switch>\n  </BrowserRouter>\n};\n\nexport default App;\n","import { newExpense, editExpense, deleteExpense, \n    setExpensesError, newExpenseError, editExpenseError, deleteExpenseError } from '../app/expensesSlice';\nimport { toast } from 'react-toastify';\n\nconst ToastMiddleware = () => next => action => {\n    switch(action.type) {\n        case newExpense.type:\n            toast.success('New expense added successfully');\n            break;\n        case editExpense.type:\n            toast.success('Expense edited successfully');\n            break;\n        case deleteExpense.type:\n            toast.success('Expense deleted successfully');\n            break;\n        case setExpensesError.type:\n            toast.error('Error loading expenses');\n            break;\n        case newExpenseError.type:\n            toast.error('Error adding new expense');\n            break;\n        case editExpenseError.type:\n            toast.error('Error editing expense');\n            break;\n        case deleteExpenseError.type:\n            toast.error('Error deleting expense');\n            break;\n        default:\n            break;\n    }\n    return next(action);\n}\n\nexport default ToastMiddleware;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport authenticationSlice from './authenticationSlice';\nimport expensesSlice from './expensesSlice';\nimport statisticsSlice from './statisticsSlice';\nimport ToastMiddleware from '../middlewares/ToastMiddleware';\n\nexport default configureStore({\n  reducer: {\n    authenticationSlice: authenticationSlice,\n    expensesSlice: expensesSlice,\n    statisticsSlice: statisticsSlice,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(ToastMiddleware)\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}